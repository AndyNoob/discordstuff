name: Build and Uploading

on:
  push:
    branches:
      - main

jobs:
  check-commit:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, 'bump') }}
    steps:
      - name: "Match commit message"
        id: match
        uses: kaisugi/action-regex-match@v1.0.0
        with:
          text: ${{ github.event.head_commit.message }}
          regex: '[bB]ump.*?(\d+(\.\d+)*)'
      - name: "Exit if no match"
        if: ${{ steps.match.outputs.group1 == '' }}
        run: |
          echo 'Not a new version.' > $GITHUB_STEP_SUMMARY
          exit 1
      - name: "Checking out"
        uses: actions/checkout@v3
      - name: "List files"
        run: ls -R
      - name: "Extract changelog"
        id: extract-changelog
        uses: sean0x42/markdown-extract@v2
        with:
          file: CHANGELOG.md
          pattern: ${{ steps.match.outputs.group1 }}
      - name: "Summary"
        run: |
          echo '${{ steps.extract-changelog.outputs.markdown }}' >> $GITHUB_STEP_SUMMARY
    outputs:
      new_ver: ${{ steps.match.outputs.group1 }}
      changelog: ${{ steps.extract-changelog.outputs.markdown }}
  build:
    needs:
      - check-commit
    runs-on: ubuntu-latest
    if: ${{ needs.check-commit.outputs.new_ver != '' }}
    steps:
      - name: "Display version"
        run: echo 'Compiling for version ${{ needs.check-commit.outputs.new_ver }}'
      - name: "Checking out"
        uses: actions/checkout@v4
      - name: "Set up java"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          cache: gradle
      - name: "Build the jar"
        run: ./gradlew build --no-daemon
      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.check-commit.outputs.new_ver }}
          path: |
            **/*.jar
            !**/original-*.jar
            !**/gradle-wrapper.jar
  publish-github:
    needs:
      - check-commit
      - build
    runs-on: ubuntu-latest
    if: ${{ needs.check-commit.outputs.new_ver != '' }}
    steps:
      - name: "Downloading built jar"
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.check-commit.outputs.new_ver }}
      - name: "Display structure of downloaded files"
        run: ls -R
      - name: "MCPublish"
        id: mc-publish
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-tag: v${{ needs.check-commit.outputs.new_ver }}

          game-versions: ">=1.16.5"
          version: ${{ needs.check-commit.outputs.new_ver }}
          loaders: |
            spigot
            paper

          files: |
            **/*.jar

          changelog: ${{ needs.check-commit.outputs.changelog }}
      - name: "Summary"
        run: |
          echo "[Github URL](${{ steps.mc-publish.outputs.github-url }})" >> $GITHUB_STEP_SUMMARY
  publish-modrinth:
    needs:
      - check-commit
      - build
    runs-on: ubuntu-latest
    if: ${{ (needs.check-commit.outputs.new_ver != '') && (vars.MODRINTH_ID != '') }}
    steps:
      - name: "Downloading built jar"
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.check-commit.outputs.new_ver }}
      - name: "Display structure of downloaded files"
        run: ls -R
      - name: "MCPublish"
        id: mc-publish
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ vars.MODRINTH_ID }}
          modrinth-featured: true
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          game-versions: ">=1.16.5"
          version: ${{ needs.check-commit.outputs.new_ver }}
          loaders: |
            spigot
            paper

          files: |
            **/*.jar

          changelog: ${{ needs.check-commit.outputs.changelog }}
      - name: "Summary"
        run: |
          echo '[Modrinth URL](${{ steps.mc-publish.outputs.modrinth-url }})' >> $GITHUB_STEP_SUMMARY
    outputs:
      url: ${{ steps.mc-publish.outputs.modrinth-url }}
  publish-hangar:
    needs:
      - check-commit
      - build
      - publish-modrinth
    runs-on: ubuntu-latest
    if: ${{ (needs.check-commit.outputs.new_ver != '') && (vars.HANGAR_ID != '') }}
    steps:
      - name: "Hangar Publish"
        id: hangar-publish
        uses: AndyNoob/hangar-upload-action@v1.0.1-url-output
        with:
          api_token: ${{ secrets.HANGAR_TOKEN }}
          channel: 'Release'
          files: |
            [
              {
                "platforms": ["PAPER"],
                "url": true,
                "externalUrl": "${{ needs.publish-modrinth.outputs.url }}"
              }
            ]
          slug: ${{ vars.HANGAR_ID }}
          version: ${{ needs.check-commit.outputs.new_ver }}
          description: ${{ needs.check-commit.outputs.changelog }}
          platform_dependencies: |
            {
              "PAPER": ["1.16.5-1.21"]
            }
      - name: "Summary"
        run: |
          echo '[Hangar URL](${{ steps.hangar-publish.outputs.url }})' >> $GITHUB_STEP_SUMMARY
  publish-curseforge:
    needs:
      - check-commit
      - build
    runs-on: ubuntu-latest
    if: ${{ (needs.check-commit.outputs.new_ver != '') && (vars.CURSEFORGE_ID != '') }}
    steps:
      - name: "Downloading built jar"
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.check-commit.outputs.new_ver }}
      - name: "Display structure of downloaded files"
        run: ls -R
      - name: "MCPublish"
        id: mc-publish
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          curseforge-id: ${{ vars.CURSEFORGE_ID }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          game-versions: ">=1.16.5"
          version: ${{ needs.check-commit.outputs.new_ver }}
          loaders: |
            spigot
            paper

          files: |
            **/*.jar

          changelog: ${{ needs.check-commit.outputs.changelog }}
      - name: "Summary"
        run: |
          echo '[Curseforge URL](${{ steps.mc-publish.outputs.curseforge-url }})' >> $GITHUB_STEP_SUMMARY